plugins {
    id 'groovy'
    id 'java'
    id "org.sonarqube" version "3.0"
    id "com.dorongold.task-tree" version "1.5"
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

allprojects {
    println "${it.name}-${it.path}"
    println "build dir - $it.buildDir"
    apply plugin: 'java'
    apply plugin: 'jacoco'


    jacoco {
        toolVersion = '0.8.2'
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    repositories {
        mavenCentral()
    }

}

ext {
    root = buildscript.sourceFile.parentFile
    srcFolders = ['BC', 'KZ']
}

sourceSets {
    main {
        java {
            srcFolders.each { sd ->
                logger.println("Add srcDir ${root}/${sd}/source/java")
                logger.println(buildscript.sourceFile.parentFile)
                srcDir "${root}/${sd}/source/java"
            }
        }

    }
    test {
        java {
            srcFolders.each { sd ->
                srcDir "${root}/${sd}/kunit/java"
            }
        }
    }
}

//apply from: "$projectDir/sonarbuild.gradle"

def allTestCoverageFile = "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"

task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    allprojects.each {
        sourceSets(it.sourceSets.main)
    }
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    allprojects*.test
}

sonarqube {
    println "sonar.coverage.jacoco.xmlReportPaths - $allTestCoverageFile"
    properties {
        property "sonar.projectKey", "kappMy"
        property "sonar.verbose", true
        property "sonar.projectName", "kappMy"
        property "sonar.coverage.jacoco.xmlReportPaths", allTestCoverageFile
        property "sonar.projectVersion", "1.0.1"
    }
}


task printInfo {
    doLast {
        allprojects.each {
            println("${it.name} sourceSet ${it.sourceSets.main.java.srcDirs}")
            it.sourceSets.main.java.srcDirs.each {
                println(it.path - projectDir - '\\')
            }
            it.sourceSets.main.java.sourceDirectories.asFileTree.visit {
                //println(it.path)
            }
            //println("${it.name} outputDir ${it.sourceSets.main.java.outputDir}")
        }
    }
}

task printSourceSetInformation {
    doLast {
        sourceSets.each { srcSet ->
            println "[" + srcSet.name + "]"
            print "-->Source directories: " + srcSet.allJava.srcDirs + "\n"
            print "-->Output directories: " + srcSet.output.classesDirs.files + "\n"
            println ""
        }
    }
}

task printInfo2 {
    doLast {

        println project.sourceSets.test.allJava.srcDirs
                .collect { it.path }
                .join(",")
        
        println project.sourceSets.main.java.srcDirs
                .collect { it.path }
                .join(",")

        /*println project.sourceSets.test.srcDirs
                .collect { it.path }
                .join(",")*/
    }
}


apply from: "$projectDir/sonarbuild.gradle"
    